version: '3.7'

services:
  postgres:
    image: ankane/pgvector
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /opt/docker-files/postgres/init:/docker-entrypoint-initdb.d 
    networks:
      - pgnet
    ports:
      - "5432:5432"
    labels:
      ofelia.enabled: "true"
      ofelia.no-overlap: "true"
      ofelia.job-exec.datecron.schedule: "@every 1m"
      ofelia.job-exec.datecron.command: "/bin/sh -c 'pg_dumpall -U postgres | sed \"/^CREATE ROLE postgres;$/d\" > /dump.sql && chmod 777 /dump.sql && mv /dump.sql /docker-entrypoint-initdb.d/backup.sql'"
  
  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - postgres
    command: daemon --docker -f label=com.docker.compose.project=${COMPOSE_PROJECT_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - pgnet
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.certbot.schedule: "@every 6h"
      ofelia.job-exec.certbot.command: |
        docker run -it --rm --name certbot -p 80:80
        -v /opt/docker-files/postgres/letsencrypt:/etc/letsencrypt
        certbot/certbot
        certonly --standalone -n -d hetzner-1.audiobookcovers.com
        --email admin@audiobookcovers.com --agree-tos -v

  pgbouncer:
    image: edoburu/pgbouncer
    restart: always
    environment:
      POOL_MODE: transaction
      AUTH_TYPE: scram-sha-256
      AUTH_QUERY: "SELECT * FROM pgbouncer.get_auth($1)"
      AUTH_USER: pgbouncer
      AUTH_PASSWORD: ${PG_BOUNCER_PASSWORD}

      DB_USER: pgbouncer
      DB_PASSWORD: ${PG_BOUNCER_PASSWORD}
      DB_HOST: postgres
      DB_PORT: "5432"
      LISTEN_PORT: "6432"

      CLIENT_TLS_SSLMODE: require
      CLIENT_TLS_KEY_FILE: /keys/server.key
      CLIENT_TLS_CERT_FILE: /keys/server.crt

    user: "0:0"
    networks:
      - pgnet
    ports:
      - "6432:6432"
    volumes:
      - /opt/docker-files/postgres/letsencrypt/live/hetzner-1.audiobookcovers.com/fullchain.pem:/keys/server.crt
      - /opt/docker-files/postgres/letsencrypt/live/hetzner-1.audiobookcovers.com/privkey.pem:/keys/server.key

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - pgnet

networks:
  pgnet:

volumes:
  pgdata:
