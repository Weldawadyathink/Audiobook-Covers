/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContributeImport } from './routes/contribute'
import { Route as ApidocsImport } from './routes/apidocs'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ImageSearchImport } from './routes/image/search'
import { Route as ImageImageIdImport } from './routes/image/$imageId'
import { Route as ImageSearchSearchStringImport } from './routes/image/search/$searchString'

// Create/Update Routes

const ContributeRoute = ContributeImport.update({
  id: '/contribute',
  path: '/contribute',
  getParentRoute: () => rootRoute,
} as any)

const ApidocsRoute = ApidocsImport.update({
  id: '/apidocs',
  path: '/apidocs',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ImageSearchRoute = ImageSearchImport.update({
  id: '/image/search',
  path: '/image/search',
  getParentRoute: () => rootRoute,
} as any)

const ImageImageIdRoute = ImageImageIdImport.update({
  id: '/image/$imageId',
  path: '/image/$imageId',
  getParentRoute: () => rootRoute,
} as any)

const ImageSearchSearchStringRoute = ImageSearchSearchStringImport.update({
  id: '/$searchString',
  path: '/$searchString',
  getParentRoute: () => ImageSearchRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/apidocs': {
      id: '/apidocs'
      path: '/apidocs'
      fullPath: '/apidocs'
      preLoaderRoute: typeof ApidocsImport
      parentRoute: typeof rootRoute
    }
    '/contribute': {
      id: '/contribute'
      path: '/contribute'
      fullPath: '/contribute'
      preLoaderRoute: typeof ContributeImport
      parentRoute: typeof rootRoute
    }
    '/image/$imageId': {
      id: '/image/$imageId'
      path: '/image/$imageId'
      fullPath: '/image/$imageId'
      preLoaderRoute: typeof ImageImageIdImport
      parentRoute: typeof rootRoute
    }
    '/image/search': {
      id: '/image/search'
      path: '/image/search'
      fullPath: '/image/search'
      preLoaderRoute: typeof ImageSearchImport
      parentRoute: typeof rootRoute
    }
    '/image/search/$searchString': {
      id: '/image/search/$searchString'
      path: '/$searchString'
      fullPath: '/image/search/$searchString'
      preLoaderRoute: typeof ImageSearchSearchStringImport
      parentRoute: typeof ImageSearchImport
    }
  }
}

// Create and export the route tree

interface ImageSearchRouteChildren {
  ImageSearchSearchStringRoute: typeof ImageSearchSearchStringRoute
}

const ImageSearchRouteChildren: ImageSearchRouteChildren = {
  ImageSearchSearchStringRoute: ImageSearchSearchStringRoute,
}

const ImageSearchRouteWithChildren = ImageSearchRoute._addFileChildren(
  ImageSearchRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/apidocs': typeof ApidocsRoute
  '/contribute': typeof ContributeRoute
  '/image/$imageId': typeof ImageImageIdRoute
  '/image/search': typeof ImageSearchRouteWithChildren
  '/image/search/$searchString': typeof ImageSearchSearchStringRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/apidocs': typeof ApidocsRoute
  '/contribute': typeof ContributeRoute
  '/image/$imageId': typeof ImageImageIdRoute
  '/image/search': typeof ImageSearchRouteWithChildren
  '/image/search/$searchString': typeof ImageSearchSearchStringRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/apidocs': typeof ApidocsRoute
  '/contribute': typeof ContributeRoute
  '/image/$imageId': typeof ImageImageIdRoute
  '/image/search': typeof ImageSearchRouteWithChildren
  '/image/search/$searchString': typeof ImageSearchSearchStringRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/apidocs'
    | '/contribute'
    | '/image/$imageId'
    | '/image/search'
    | '/image/search/$searchString'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/apidocs'
    | '/contribute'
    | '/image/$imageId'
    | '/image/search'
    | '/image/search/$searchString'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/apidocs'
    | '/contribute'
    | '/image/$imageId'
    | '/image/search'
    | '/image/search/$searchString'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ApidocsRoute: typeof ApidocsRoute
  ContributeRoute: typeof ContributeRoute
  ImageImageIdRoute: typeof ImageImageIdRoute
  ImageSearchRoute: typeof ImageSearchRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ApidocsRoute: ApidocsRoute,
  ContributeRoute: ContributeRoute,
  ImageImageIdRoute: ImageImageIdRoute,
  ImageSearchRoute: ImageSearchRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/apidocs",
        "/contribute",
        "/image/$imageId",
        "/image/search"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/apidocs": {
      "filePath": "apidocs.tsx"
    },
    "/contribute": {
      "filePath": "contribute.tsx"
    },
    "/image/$imageId": {
      "filePath": "image/$imageId.tsx"
    },
    "/image/search": {
      "filePath": "image/search.tsx",
      "children": [
        "/image/search/$searchString"
      ]
    },
    "/image/search/$searchString": {
      "filePath": "image/search/$searchString.tsx",
      "parent": "/image/search"
    }
  }
}
ROUTE_MANIFEST_END */
